/********************************************************************
// These are the notes for ch 6 used in hayes class


import
//******************************************************************* */


import java.text.DecimalFormat;
import java.text.NumberFormat;
import javax.swing.*;
import java.util.StringTokenizer;
import java.util.*;

public class ch6intro_to_array

{
    final static int MAX = 15;
    public static void main (String[] args)
    {
        mathy useful = new mathy();
        Scanner Keyboard = new Scanner(System.in);
        Random generator = new Random();
        Sorts sort = new Sorts();
        
        ArrayList <String> farm = new ArrayList<>();
        
        farm.add("cow");
        farm.add("chicken");
        for (int i = 0; i < 20; i++)
        {
            farm.add("cow");
            farm.add("chicken");
            farm.add("chicken");
            farm.add("duck");
            farm.add("horse");
        }
        farm.add("dog");
        farm.add("dog");
        farm.add("dog");
        farm.add("pig");
        farm.add("pig");
        farm.add("pig");
        farm.add("pig");
        
        System.out.println(farm);
        int count = 0;
        for (int i = 0; i < farm.size(); i++)
        {
            if (farm.get(i).equals("chicken"))
            {
                count++;
            }
        }
        System.out.println("There are " + count + " chicken");
        
        for (int r = farm.size() - 1; r >= 0; r--)
        {
            if (farm.get(r).equals("chicken"))
            {
                farm.remove("chicken");
            }
        }
        System.out.println("We removed all of the chickens. Yeah we slaughtered them");
        
        for (int c = 0; c < farm.size(); c++)
        {
            System.out.println(farm.get(c));
        }
        
        ArrayList <Integer> list = new ArrayList<>();
        ArrayList<CD> mycds = new ArrayList<>();
        
        mycds.add(new CD("The Wall", "Donald Trump", 1000000, 1000000));
        mycds.add(new CD("You Gotta Believe", "Jim Royal", 1000000000, 1000000));
        
        
        
//         int x = 50;
//         int[] num = new int[100];
//         int[] nums = new int[100000];
//         int[] values = new int[20];
//         int[] oddnum = new int[num.length];
//         int[] evennum = new int[num.length];
//         int[] negnum = new int[MAX];
//         for(int i =0; i<num.length; i++)
//         {
//            nums[i] = generator.nextInt(100)-50;
//         }
//         sort.insertionSort(nums);
//         for (int f = 0; f < nums.length; f++)
//         {
//             System.out.println(nums[f]);
//         }
// 
//         Random gen = new Random();
//           int[] num = new int[20];
//           pop with random numbers range -50 to 50
//
//         for(int i =0; i<num.length; i++)
//         {
//             num[i] = gen.nextInt(100)-50;
//         }
// 
//         for(int i =num.length -100; i<num.length; i++)
//         {
//             System.out.println( num[i] );
//         }
//         System.out.println("----------SORTING-----------"  );
// 
// 
// 
//         
//         int look = 42;
//            
//         System.out.println(Searches.linearSearch(num,look)  );
//         System.out.println(Searches.binarySearch(num,look)  );
//         
// 
//          
// 
//         //Sorts.selectionSort(num);
//         System.out.println(num.length  );
//         num = doubleSize(num);
// 
// 
//         for (int s : num)
//         {
//         }
// 
// 
//              odd(num,oddnum);
// 
//         System.out.println("---------------");
// 
//         for (int s : oddnum)
//             System.out.println(s);
// 
//         
//         System.out.println("Enter a number");
//         int find = Keyboard.nextInt();
// 
//         System.out.println(Searches. binarySearch(num,find));
// 
//         
//          //searching for 412
//           for (int i = 0; i < MAX; i++)
//             x++;
// 
//         // for (int i = 0; i < MAX; i++)
//         //  values[num[i]+25] ++;
//         //  x++;
//         //how do you count the #of times each value comes up?
// 
//         for( int i =0; i<num.length; i++)
//             System.out.print("\t" + num[i]);
// 
//         //for (int i = 0; i<50;i++)
//         //   System.out.println("The number of times" + (i-25) +"is" +
//         //                       "\t" + values[i]);
// 
//         useful.getEven(num, evennum);
//         for (int s : evennum)
//         {
//             System.out.println(s);
//         }
// 
// 
//         
//         //   foo(num[7]);
//         /*
//         System.out.println(oddnum[7]);
// 
//         odd(num,oddnum);
// 
//         negnum = neg(num);
//         */
//         
// 
//     }// end of main
//
//     public static int[] doubleSize(int[] array)
//     {
// 
// 
//         return array;
        
//     int [][] scores = { {1, 2, 3},
//                         {2, 2, 3},
//                         {3, 2, 3},
//                         {4, 2, 3} };
//     System.out.println(scores[1][0]);
//     System.out.println(scores[0].length + " columns");
//     System.out.println(scores.length + " rows");
//     
//     int sum = 0;
//     for ( int row = 0; row < scores.length; row++)
//     {
//         for (int col = 0; col < scores[row].length; col++)
//         {
//             sum += scores[row][col];
//         }
//     }
//     System.out.println("Sum: " + sum);
    
    /*
    int [][] table = new int [5][10];
    
    for (int row = 0; row < table.length; row++)
    {
        for (int col = 0; col < table[row].length; col++)
        {
            table[row][col] = row * 10 + col;
        }
    }
    
    for (int row = 0; row < table.length; row++)
    {
        for (int col = 0; col < table[row].length; col++)
        {
            System.out.print(table[row][col] + "\t");
        }
        System.out.println();
    }
    */
   

    }
    
    public static void foo(int x)
    {


    }



    public static void foo(int [] num)
      {

      }




    public static void odd(int[] m_num, int[] m_odd)
    {
        

        int count =0;


    }// end of odd


//     public static int[] neg(int[] m_num)
//     {
// 
// 
//        //return negarray;
//     }//end of neg
}// end of class











